---
---

<html lang="es">
  <head>
    <meta charset="utf-8" />
    <title>Generador de Código QR</title>
  </head>
  <body>
    <div class="container">
      <h1>Generador de Código QR</h1>
      <input type="password" id="passwordInput" placeholder="Contraseña" />
      <input type="url" id="urlInput" placeholder="URL para el QR" />
      <button id="generateBtn">Generar QR</button>
      <div id="qrContainer"></div>
      <p>Click derecho, guardar imagen como...&#128190;</p>
      <p>&#169; Creado por Marco Jaramillo</p>
    </div>

    <script>
      const CORRECT_PASSWORD = 'secreta123'; // Cambia esto a la contraseña que desees
      const API_URL = 'https://qrgeneratorbackend-production.up.railway.app/generate-qr'; // Cambia esto a la URL de tu backend en Railway

      document.addEventListener('DOMContentLoaded', () => {
        const passwordInput = document.getElementById('passwordInput') as HTMLInputElement;
        const urlInput = document.getElementById('urlInput') as HTMLInputElement;
        const generateBtn = document.getElementById('generateBtn') as HTMLButtonElement;
        const qrContainer = document.getElementById('qrContainer') as HTMLDivElement;

        if (!passwordInput || !urlInput || !generateBtn || !qrContainer) {
          console.error('No se pudieron encontrar todos los elementos necesarios');
          return;
        }

        generateBtn.addEventListener('click', async () => {
          if (passwordInput.value !== CORRECT_PASSWORD) {
            alert('Contraseña incorrecta');
            return;
          }

          const url = urlInput.value;
          if (!url) {
            alert('Por favor, ingrese una URL');
            return;
          }

          try {
            qrContainer.textContent = 'Generando QR...';
            const response = await fetch(`${API_URL}?url=${encodeURIComponent(url)}`);
            if (response.ok) {
              const blob = await response.blob();
              const imgUrl = URL.createObjectURL(blob);
              qrContainer.innerHTML = `<img src="${imgUrl}" alt="QR Code" />`;
            } else {
              qrContainer.textContent = `Error al generar el QR: ${response.status} ${response.statusText}`;
            }
          } catch (error) {
            qrContainer.textContent = `Error de red: ${error instanceof Error ? error.message : 'Desconocido'}`;
            console.error('Error:', error);
          }
        });
      });
    </script>

    <style>
     :root {
  --primary-color: #4a90e2;
  --secondary-color: #f5a623;
  --background-color: #f0f4f8;
  --text-color: #333;
  --input-background: #ffffff;
  --shadow-color: rgba(0, 0, 0, 0.1);
}

body {
  font-family: 'Arial', sans-serif;
  background-color: var(--background-color);
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  margin: 0;
  padding: 20px;
  box-sizing: border-box;
}

.container {
  background: linear-gradient(145deg, #ffffff, #e6e6e6);
  border-radius: 20px;
  padding: 40px;
  box-shadow: 0 10px 30px var(--shadow-color);
  max-width: 400px;
  width: 100%;
  text-align: center;
}

h1 {
  color: var(--primary-color);
  margin-bottom: 30px;
  font-size: 28px;
  text-shadow: 1px 1px 2px var(--shadow-color);
}

input[type="password"],
input[type="url"] {
  width: 100%;
  padding: 12px;
  margin-bottom: 20px;
  border: none;
  border-radius: 8px;
  background-color: var(--input-background);
  box-shadow: inset 0 2px 4px var(--shadow-color);
  font-size: 16px;
  transition: all 0.3s ease;
}

input[type="password"]:focus,
input[type="url"]:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.3);
}

button {
  background-color: var(--primary-color);
  color: white;
  border: none;
  padding: 12px 24px;
  border-radius: 8px;
  cursor: pointer;
  font-size: 16px;
  font-weight: bold;
  transition: all 0.3s ease;
  box-shadow: 0 4px 6px var(--shadow-color);
}

button:hover {
  background-color: #3a7bc8;
  transform: translateY(-2px);
  box-shadow: 0 6px 8px var(--shadow-color);
}

button:active {
  transform: translateY(0);
  box-shadow: 0 2px 4px var(--shadow-color);
}

#qrContainer {
  margin-top: 30px;
  padding: 20px;
  border-radius: 10px;
 
  display: inline-block;
}

p {
  color: var(--text-color);
  margin-top: 20px;
  font-size: 14px;
}

p:last-child {
  font-style: italic;
  color: #888;
}

@media (max-width: 480px) {
  .container {
    padding: 20px;
  }

  h1 {
    font-size: 24px;
  }

  input[type="password"],
  input[type="url"],
  button {
    font-size: 14px;
  }
}
    </style>
  </body>
</html>