---
---

<html lang="es">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <title>Generador de Código QR</title>
  </head>
  <body>
    <div class="container">
      <h1>Generador de Código QR</h1>
      <input type="password" id="passwordInput" placeholder="Contraseña" />
      <input type="url" id="urlInput" placeholder="URL para el QR" />
      <button id="generateBtn">Generar QR</button>
      <div id="qrContainer"></div>
      <p>Click derecho, guardar imagen como...&#128190;</p>
      <p>&#169; Creado por Marco Jaramillo</p>
    </div>

    <script>
      const CORRECT_PASSWORD = 'secreta123'; // Cambia esto a la contraseña que desees
      const API_URL = 'https://qrgeneratorbackend-production.up.railway.app/generate-qr'; // Cambia esto a la URL de tu backend en Railway

      document.addEventListener('DOMContentLoaded', () => {
        const passwordInput = document.getElementById('passwordInput') as HTMLInputElement;
        const urlInput = document.getElementById('urlInput') as HTMLInputElement;
        const generateBtn = document.getElementById('generateBtn') as HTMLButtonElement;
        const qrContainer = document.getElementById('qrContainer') as HTMLDivElement;

        if (!passwordInput || !urlInput || !generateBtn || !qrContainer) {
          console.error('No se pudieron encontrar todos los elementos necesarios');
          return;
        }

        generateBtn.addEventListener('click', async () => {
          if (passwordInput.value !== CORRECT_PASSWORD) {
            alert('Contraseña incorrecta');
            return;
          }

          const url = urlInput.value;
          if (!url) {
            alert('Por favor, ingrese una URL');
            return;
          }

          try {
            qrContainer.textContent = 'Generando QR...';
            const response = await fetch(`${API_URL}?url=${encodeURIComponent(url)}`);
            if (response.ok) {
              const blob = await response.blob();
              const imgUrl = URL.createObjectURL(blob);
              qrContainer.innerHTML = `<img src="${imgUrl}" alt="QR Code" />`;
            } else {
              qrContainer.textContent = `Error al generar el QR: ${response.status} ${response.statusText}`;
            }
          } catch (error) {
            qrContainer.textContent = `Error de red: ${error instanceof Error ? error.message : 'Desconocido'}`;
            console.error('Error:', error);
          }
        });
      });
    </script>
<style>
  :root {
  --primary-color: #4a90e2;
  --background-color: #f0f4f8;
  --text-color: #333;
  --input-background: #ffffff;
  --shadow-color: rgba(0, 0, 0, 0.1);
}

body, html {
  margin: 0;
  padding: 0;
  height: 100%;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
  background-color: var(--background-color);
}

body {
  display: flex;
  justify-content: center;
  align-items: center;
}

.container {
  background: #ffffff;
  border-radius: 20px;
  padding: 5% 5% 7%;
  box-shadow: 0 10px 30px var(--shadow-color);
  width: 90%;
  max-width: 400px;
  box-sizing: border-box;
}

h1 {
  color: var(--primary-color);
  margin-bottom: 20px;
  font-size: 24px;
  text-align: center;
}

input[type="password"],
input[type="url"] {
  width: 100%;
  padding: 12px;
  margin-bottom: 15px;
  border: 1px solid #ddd;
  border-radius: 8px;
  background-color: var(--input-background);
  font-size: 16px;
  box-sizing: border-box;
}

button {
  background-color: var(--primary-color);
  color: white;
  border: none;
  padding: 12px 24px;
  border-radius: 8px;
  cursor: pointer;
  font-size: 16px;
  font-weight: bold;
  width: 100%;
  margin-bottom: 20px;
}

#qrContainer {
  margin-top: 20px;
  padding: 15px;
  background-color: white;
  border-radius: 10px;
  box-shadow: 0 4px 8px var(--shadow-color);
  display: flex;
  justify-content: center;
  align-items: center;
}

#qrContainer img {
  max-width: 100%;
  height: auto;
}

p {
  color: var(--text-color);
  margin-top: 15px;
  font-size: 14px;
  text-align: center;
}

@media (max-width: 767px) {
  .container {
    padding: 20px;
    width: 95%;
    margin: 20px auto;
  }

  h1 {
    font-size: 22px;
  }

  input[type="password"],
  input[type="url"],
  button {
    font-size: 16px;
    padding: 10px;
  }

  p {
    font-size: 12px;
  }
}

@media (max-height: 700px) {
  .container {
    padding-top: 15px;
    padding-bottom: 15px;
  }

  h1 {
    margin-bottom: 15px;
  }

  input[type="password"],
  input[type="url"] {
    margin-bottom: 10px;
  }
}
</style>
  </body>
</html>